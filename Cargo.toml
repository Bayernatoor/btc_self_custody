[package]
name = "we_hodl_btc"
version = "0.1.0"
authors = ["Bayer <bayernator@protonmail.com"]
edition = "2021"

[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1

[lib]
crate-type = ["cdylib", "rlib"]
path = "src/lib.rs"

[[bin]]
path = "src/main.rs"
name = "we_hodl_btc"

[dependencies]
actix-files = { version = "0.6", optional = true }
actix-web = { version = "4", optional = true, features = ["macros"] }
console_error_panic_hook = "0.1"
console_log = "0.2"
cfg-if = "1"
leptos = { version = "^0.6.15", features = ["nightly"] }
leptos_meta = { version = "^0.6.15", features = ["nightly"] }
leptos_actix = { version = "^0.6.15", optional = true }
leptos_router = { version = "^0.6.15", features = ["nightly"] }
log = "0.4"
wasm-bindgen = "^0.2.100"
serde = { version = "1.0.189", features = ["derive"] }
pulldown-cmark = { version = "=0.12.1", features = ["serde"] }
tokio = { version = "1.33.0", features = ["macros"] }
config = "0.14"
uuid = {version = "^1.11.0", features = ["v4", "js"] }
chrono = { version = "0.4.22", default-features = false, features = ["clock"] }
tracing = { version = "0.1", features = ["log"] }
tracing-futures = "0.2.5"
tracing-subscriber = { version = "0.3.18", features = ["registry", "env-filter"] }
tracing-bunyan-formatter = { git  = "https://github.com/Bayernatoor/tracing-bunyan-formatter.git", default-features = false, branch = "add_support_for_all_targets"}
tracing-log = "0.2.0"
leptos-use = { version = "0.13.0", features = ["use_clipboard"]}

[dependencies.sqlx]
version = "0.7.4"
features = [
    "runtime-tokio",
    "tls-rustls",
    "macros",
    "postgres",
    "uuid",
    "chrono",
    "migrate",
    ]
optional = true
    
[dev-dependencies]
reqwest = { version = "0.11", features = ["json"] }
clippy = "0.0.302"
once_cell = "1.19.0"

[features]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = ["dep:actix-files", "dep:actix-web", "dep:leptos_actix", "dep:sqlx", "sqlx/runtime-tokio", "leptos/ssr", "leptos_meta/ssr", "leptos_router/ssr",  "leptos-use/ssr"]

[package.metadata]
cargo-fmt = true

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name   
output-name = "we_hodl_btc"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg	
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
#style-file = "style/main.scss"
style-file = "style/output.css"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "assets"
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:8000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = true 
# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# release profile
lib-profile-release = "wasm-release"

